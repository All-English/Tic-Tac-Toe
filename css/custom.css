/* THEME */

@import url("https://fonts.googleapis.com/css2?family=Parkinsans:wght@300..800&display=swap");

:root {
  /* @link https://utopia.fyi/type/calculator?c=320,16,1.2,1240,18,1.25,6,2,&s=0.75|0.5|0.25,1.5|2|3|4|6|8,s-l&g=s,l,xl,12 */

  /* Fluid Font Sizes
    Step -2: 11.1111px → 11.52px
    Step -1: 13.3333px → 14.4px
    Step 0: 16px → 18px
    Step 1: 19.2px → 22.5px
    Step 2: 23.04px → 28.125px
    Step 3: 27.648px → 35.1563px
    Step 4: 33.1776px → 43.9453px
    Step 5: 39.8131px → 54.9316px
    Step 6: 47.7757px → 68.6646px */
  --fs-step--2: clamp(0.6944rem, 0.6856rem + 0.0444vw, 0.72rem);
  --fs-step--1: clamp(0.8333rem, 0.8101rem + 0.1159vw, 0.9rem);
  --fs-step-0: clamp(1rem, 0.9565rem + 0.2174vw, 1.125rem);
  --fs-step-1: clamp(1.2rem, 1.1283rem + 0.3587vw, 1.4063rem);
  --fs-step-2: clamp(1.44rem, 1.3295rem + 0.5527vw, 1.7578rem);
  --fs-step-3: clamp(1.728rem, 1.5648rem + 0.8161vw, 2.1973rem);
  --fs-step-4: clamp(2.0736rem, 1.8395rem + 1.1704vw, 2.7466rem);
  --fs-step-5: clamp(2.4883rem, 2.1597rem + 1.6433vw, 3.4332rem);
  --fs-step-6: clamp(2.986rem, 2.5319rem + 2.2705vw, 4.2915rem);

  /* Fluid Space Sizes
    Space 3xs: 4px → 5px
    Space 2xs: 8px → 9px
    Space xs: 12px → 14px
    Space s: 16px → 18px
    Space m: 24px → 27px
    Space l: 32px → 36px
    Space xl: 48px → 54px
    Space 2xl: 64px → 72px
    Space 3xl: 96px → 108px
    Space 4xl: 128px → 144px */
  --space-3xs: clamp(0.25rem, 0.2283rem + 0.1087vw, 0.3125rem);
  --space-2xs: clamp(0.5rem, 0.4783rem + 0.1087vw, 0.5625rem);
  --space-xs: clamp(0.75rem, 0.7065rem + 0.2174vw, 0.875rem);
  --space-s: clamp(1rem, 0.9565rem + 0.2174vw, 1.125rem);
  --space-m: clamp(1.5rem, 1.4348rem + 0.3261vw, 1.6875rem);
  --space-l: clamp(2rem, 1.913rem + 0.4348vw, 2.25rem);
  --space-xl: clamp(3rem, 2.8696rem + 0.6522vw, 3.375rem);
  --space-2xl: clamp(4rem, 3.8261rem + 0.8696vw, 4.5rem);
  --space-3xl: clamp(6rem, 5.7391rem + 1.3043vw, 6.75rem);
  --space-4xl: clamp(8rem, 7.6522rem + 1.7391vw, 9rem);

  /* Fluid Space One-up Pair Sizes
    Space 3xs-2xs: 4px → 9px
    Space 2xs-xs: 8px → 14px
    Space xs-s: 12px → 18px
    Space s-m: 16px → 27px
    Space m-l: 24px → 36px
    Space l-xl: 32px → 54px
    Space xl-2xl: 48px → 72px
    Space 2xl-3xl: 64px → 108px
    Space 3xl-4xl: 96px → 144px */
  --space-3xs-2xs: clamp(0.25rem, 0.1413rem + 0.5435vw, 0.5625rem);
  --space-2xs-xs: clamp(0.5rem, 0.3696rem + 0.6522vw, 0.875rem);
  --space-xs-s: clamp(0.75rem, 0.6196rem + 0.6522vw, 1.125rem);
  --space-s-m: clamp(1rem, 0.7609rem + 1.1957vw, 1.6875rem);
  --space-m-l: clamp(1.5rem, 1.2391rem + 1.3043vw, 2.25rem);
  --space-l-xl: clamp(2rem, 1.5217rem + 2.3913vw, 3.375rem);
  --space-xl-2xl: clamp(3rem, 2.4783rem + 2.6087vw, 4.5rem);
  --space-2xl-3xl: clamp(4rem, 3.0435rem + 4.7826vw, 6.75rem);
  --space-3xl-4xl: clamp(6rem, 4.9565rem + 5.2174vw, 9rem);

  --palette-hue: var(--oklch-indigo);
  --palette-chroma: 0.89;
  --palette-hue-rotate-by: 0;

  --surface-default: light-dark(var(--color-1), var(--color-13));
  --surface-filled: light-dark(var(--color-3), var(--color-15));
  --surface-tonal: light-dark(var(--color-3), var(--color-12));
  --surface-elevated: light-dark(var(--color-1), var(--color-12));

  --surface-card: light-dark(var(--color-2), var(--color-14));

  --border-color: light-dark(var(--color-4), var(--color-12));

  --purple: oklch(from var(--color-9) l 0.2 310);
}

/* Black & White Theme Definition */
html.theme-bw {
  --surface-default: light-dark(var(--gray-0), var(--gray-15));
  --surface-elevated: light-dark(var(--gray-0), var(--gray-15));
  --surface-tonal: light-dark(var(--gray-0), var(--gray-15));
  --surface-filled: light-dark(var(--gray-1), var(--gray-14));

  --surface-card: light-dark(var(--gray-0), var(--gray-15));

  --border-color: light-dark(var(--gray-4), var(--gray-12));

  --primary: light-dark(var(--gray-15), var(--gray-1));

  & button {
    --_bg-color: var(--surface-default);
    /* --_border-color: var(--primary); */
    --_text-color: var(--primary);

    &.selected {
      --_bg-color: light-dark(var(--gray-15), var(--gray-0));
      color: light-dark(var(--gray-0), var(--gray-15));
    }

    &:not(.selected):hover {
      --_bg-color: light-dark(var(--gray-3), var(--gray-13));
    }
  }

  /* #game-board:not(.hidden) {
    --border-color: var(--primary);
  } */
}

/* CUSTOM STYLES */

body {
  display: grid;
  place-content: center;
  gap: var(--size-fluid-4);
  padding: var(--size-fluid-4);
  font-family: 'Parkinsans', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body::before {
  background-image: url(/images/speckles-black.svg);
}

html.dark body::before {
  background-image: url(/images/speckles-white.svg);
}

/* body::after {
  background-image: url(/images/speckles-blue.svg);
} */

body::after,
body::before {
  background-position: top;
  content: "";
  inset: 0;
  pointer-events: none;
  position: absolute;
  /* z-index: 10; */
}

.theme-switcher-container {
  position: absolute;
  top: var(--size-3);
  right: var(--size-3);
  z-index: 10;
}

/* --- Theme Toggle Icon Styles --- */
.theme-switcher-container .switch>[role=switch] {
  /* Define SVGs as custom properties */
  --_icon-sun: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3ccircle cx='12' cy='12' r='4'%3e%3c/circle%3e%3cpath d='M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41'%3e%3c/path%3e%3c/svg%3e");
  --_icon-moon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23292f33' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'%3e%3c/path%3e%3c/svg%3e");
}

/* Base styles for the icon inside the thumb */
.theme-switcher-container .switch>[role=switch]::after {
  content: "";
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60%;
}

/* Light Mode: Apply Sun Icon background image to the thumb */
.light .theme-switcher-container .switch>[role=switch]::after {
  background-image: var(--_icon-sun);
}

/* Dark Mode: Apply Moon Icon background image to the thumb */
.dark .theme-switcher-container .switch>[role=switch]:checked::after {
  background-image: var(--_icon-moon);
}

main {
  display: grid;
  gap: var(--size-5);
  width: 100%;
  position: relative;
}

#game-setup {
  max-width: 70ch;
  margin-inline: auto;
  background-color: var(--surface-card);
}

#game-setup>hgroup {
  text-align: center;
}

#game-setup .actions {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--size-4);
  justify-content: center;
}

#randomize-container {
  display: flex;
  justify-content: center;
  margin-bottom: var(--size-fluid-2);
}

#unit-selectors-container {
  margin-bottom: var(--size-fluid-2);
}

.word-selection-container {
  display: grid;
  justify-items: center;
  gap: var(--size-2);
}

.phonics-unit-select .separator {
  pointer-events: none;
  /* This makes the option unclickable */
  text-align: center;
  color: var(--text-color-2);
  font-style: italic;
}

/* This prevents the separator from getting a background color on hover */
.phonics-unit-select .separator:hover {
  background-color: transparent;
}

/* We also need to center the text inside the hint paragraph */
#api-settings-section {
  text-align: center;
}

.button-group {
  display: flex;
  gap: var(--size-fluid-2);
  justify-content: center;
  margin-bottom: var(--size-fluid-2);
}

#player-names-container {
  display: grid;
  gap: var(--size-fluid-2);
  margin-block: var(--size-fluid-1) 0;
}

.content>.setup-section>.h5 {
  /* Updated selector */
  border-bottom: 1px solid var(--border-color);
  padding-bottom: var(--size-fluid-1);
  margin-block-end: var(--size-fluid-2);
  text-align: center;
}

.content>.setup-section:first-of-type>.h5 {
  margin-block-start: 0;
}

.range-label-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.player-setup>.h5,
.game-mode-setup>.h5 {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--size-2);
}

/* This makes the player name fields look grabbable */
.player-name-field {
  cursor: grab;
  user-select: none;
  /* Prevents text selection while dragging */
}

.player-name-field input {
  color: var(--text-color-2);
}

/* This class is added to the field being dragged */
.player-name-field.dragging {
  opacity: 0.5;
}

#main-theme-selector {
  justify-self: center;
  margin-block-start: var(--size-fluid-3);
  max-width: 30ch;
  transition: opacity 0.4s var(--ease-out-3), transform 0.4s var(--ease-out-3);
}

#game-setup:not(.is-active)~#main-theme-selector {
  opacity: 0;
  transform: scale(0.95);
  pointer-events: none;
  display: none;
}

#game-view:not(.hidden) {
  display: grid;
  place-items: center;
  align-content: center;
  gap: var(--size-5);
  width: fit-content;
  margin-inline: auto;
}

#game-board:not(.hidden) {
  display: grid;
  position: relative;
  border-radius: var(--radius-3);
  overflow: hidden;
  border: var(--border-size-1) solid var(--border-color);
  gap: var(--border-size-1);
  background-color: var(--border-color);
}

#game-controls:not(.hidden) {
  display: flex;
  justify-content: center;
  gap: var(--size-fluid-2);
}

.cell {
  --_bg-color: var(--surface-card);
  --_text-color: var(--text-color-1);
  --_border-radius: 0;

  position: relative;
  aspect-ratio: var(--ratio-golden);
  font-size: var(--font-size-fluid-2);
  word-break: break-all;
  hyphens: auto;

  display: grid;
  place-content: center;

  text-align: center;
  min-width: 6ch;
  transition: background-color 0.2s var(--ease-out-3);
  opacity: 1;
}

#game-board {

  /* For 3x3 grids (9 cells) */
  &:has(.cell:nth-child(9)) .cell {
    font-size: var(--fs-step-6);
    padding: var(--space-s-m);
  }

  /* For 4x4 grids (16 cells) */
  &:has(.cell:nth-child(16)) .cell {
    font-size: var(--fs-step-5);
  }

  /* For 5x5 grids (25 cells) */
  &:has(.cell:nth-child(25)) .cell {
    font-size: var(--fs-step-4);
  }

  /* For 6x6 and 7x7 grids (36 to 49 cells) */
  &:has(.cell:nth-child(36)) .cell {
    font-size: var(--fs-step-3);
    padding: var(--space-s);
  }

  /* For 8x8 grids (64 cells) */
  &:has(.cell:nth-child(64)) .cell {
    font-size: var(--fs-step-2);
  }

  /* For 9x9 and 10x10 grids (81 to 100 cells) */
  &:has(.cell:nth-child(81)) .cell {
    font-size: var(--fs-step-1);
    padding: var(--space-xs);
  }
}

.cell:not(:disabled):hover {
  --_bg-color: oklch(from var(--surface-card) calc(l + 0.05) c h);
}

.cell::after {
  content: attr(data-player-symbol);
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  font-size: var(--font-size-fluid-3);
  color: var(--player-color, var(--text-color-1));
  /* background-color: oklch(from var(--surface-card) l c h); */
  background-color: light-dark(oklch(from var(--player-color) 95% 0.02 h), oklch(from var(--player-color) 25% 0.02 h));
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.2s var(--ease-out-3), transform 0.2s var(--ease-out-3);
}

.cell[data-player-symbol]::after {
  opacity: 1;
  transform: scale(1);
}

.cell.highlight {
  --_text-color: var(--gray-0);
  /* --_bg-color: var(--player-color); */
  --_border-color: none;
}

.cell.pulse {
  animation: pulse 0.6s var(--ease-in-out-3);
}

.phonics-unit-container {
  display: grid;
  gap: var(--size-1);
  grid-template-columns: auto auto;
  align-items: center;
}

.phonics-unit-container+.phonics-unit-container {
  margin-top: var(--size-fluid-1);
}

dialog#game-over-dialog {
  --_bg-color: var(--surface-tonal);
  max-width: 50ch;
  padding: var(--size-fluid-3);
  border-radius: var(--radius-3);
  opacity: 0;
  transform: scale(0.95);
  transition:
    display .5s allow-discrete,
    overlay .5s allow-discrete,
    opacity .5s var(--ease-out-3),
    transform .5s var(--ease-out-3);

  /* State when the dialog is open */
  &[open] {
    opacity: 1;
    transform: scale(1);

    @starting-style {
      opacity: 0;
      transform: scale(0.95);
    }
  }

  /* Backdrop pseudo-element */
  &::backdrop {
    background-color: oklch(from var(--surface-tonal) l c h / 0.5);
    backdrop-filter: blur(4px);
    transition: backdrop-filter .3s ease-out, background-color .3s ease-out;
  }

  /* Descendant Elements */
  hgroup {
    align-self: center;
  }

  #dialog-title {
    font-size: var(--fs-step-3);
    color: var(--primary);
    display: inline-flex;
    align-items: center;
    gap: var(--size-fluid-1);

    svg {
      width: var(--size-6);
      height: var(--size-6);
    }
  }

  #dialog-content {
    text-align: center;
  }

  .winner-text {
    font-size: var(--fs-step-3);
    margin-block: var(--space-s);
    color: var(--primary);
  }

  .score-list {
    display: grid;
    margin-top: var(--size-4);
  }

  .score-line {
    font-size: var(--fs-step-2);
    padding-block: var(--space-3xs);

    &.winner {
      color: var(--yellow-7);
      font-weight: var(--font-weight-6);
    }

    svg {
      width: var(--size-5);
      height: var(--size-5);
    }
  }

  .actions {
    justify-content: center;

    .button {
      font-size: var(--fs-step-1);
    }
  }
}

#player-info-list:not(.hidden) {
  display: flex;
  gap: var(--size-3);
  flex-wrap: wrap;
  justify-content: center;
}

.player-info-block {
  --_bg-color: light-dark(oklch(from var(--player-color) 95% 0.02 h), oklch(from var(--player-color) 25% 0.02 h));
  --_border-color: light-dark(oklch(from var(--player-color) 85% 0.05 h), oklch(from var(--player-color) 15% 0.05 h));
  font-size: var(--font-size-fluid-1);
  padding-block: var(--size-fluid-1);
  flex-grow: 1;
  text-align: center;
  border-radius: var(--radius-2);
  gap: 0;
  transition: opacity 0.4s ease, filter 0.4s ease;
}

.player-info-block.badge {
  --_inset-offset: 26px;
  --_color: var(--player-color);
  --_border-color: transparent;
}

.player-info-block.badge::after {
  font-size: var(--font-size-fluid-0);
  min-inline-size: var(--size-5);
  block-size: var(--size-5);
}

.player-info-block h3 {
  color: var(--player-color);
  font-size: inherit;
}

.player-info-block.current-player {
  border: var(--border-size-1) solid var(--player-color);
  /* This combines the one-off bounce with the looping glow */
  animation:
    bounce-in 0.6s var(--ease-elastic-3) forwards,
    breathing-glow 2.5s var(--ease-in-out-3) infinite alternate;
}

.player-info-block.eliminated {
  opacity: 0.5;
  filter: grayscale(80%);
  transition: opacity 0.4s ease, filter 0.4s ease;
}

.player-info-block.eliminated h3 {
  text-decoration: line-through;
}

.word-wrapper {
  display: flex;
  align-items: baseline;
  white-space: nowrap;
}

.cell .target-sounds {
  color: var(--primary);
  font-weight: var(--font-weight-7);
}

.cell.blocked::after {
  animation: var(--animation-shake-x);
}

.setting-group {
  display: grid;
  gap: var(--size-fluid-2);
  justify-items: start;
  margin-block-start: var(--size-fluid-3);
}

.setting-group>.label {
  font-size: var(--font-size-2);
  color: var(--text-color-2);
  margin-bottom: calc(-1 * var(--size-2));
  font-weight: var(--font-weight-6);
}

.strike-through-line {
  position: absolute;
  height: var(--size-1);
  border-radius: var(--radius-round);
  box-shadow: var(--shadow-2);
  background-color: currentColor;
  transform-origin: left center;

  /* Initial state for animation */
  width: 0;
  opacity: 0;

  transition: width .5s var(--ease-out-3), opacity .5s var(--ease-out-3);
}

.setting-group .label {
  color: var(--text-color-2);
  white-space: nowrap;
}

.field-hint {
  color: var(--text-color-2);
  font-size: var(--font-size-fluid-0);
  text-align: center;
  margin-inline: auto;
  margin-block-start: var(--size-1);
  /* Constrains line length for readability */
  max-width: 28ch;
}

#view-container {
  display: grid;
  perspective: 1000px;
  place-items: center;
}

.view {
  /* Place both views in the same grid cell */
  grid-area: 1 / 1;
  transition: opacity 0.4s var(--ease-out-3), transform 0.4s var(--ease-out-3);
  backface-visibility: hidden;
}

/* State for the INACTIVE view */
.view:not(.is-active) {
  opacity: 0;
  transform: scale(0.95);
  pointer-events: none;
  position: absolute;
  inset: 0;
  z-index: -1;
}

/* State for the ACTIVE view */
.view.is-active {
  opacity: 1;
  transform: scale(1);
  pointer-events: auto;
  position: relative;
  z-index: 1;
}

/* --- Reorder Mode Styles --- */

#reorder-controls .button-group {
  margin: 0;
}

/* Make player cards look and feel draggable during reorder mode */
.reorder-active .player-info-block {
  cursor: grab;
}

.reorder-active .player-info-block.dragging {
  opacity: 0.5;
}

.player-info-block.drop-target,
.player-name-field.drop-target {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
  background-color: var(--surface-filled);
}

footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 48px;
  overflow: hidden;
  pointer-events: none;
  z-index: 100;
}

.footer-illustration img {
  position: absolute;
  left: 100%;
  bottom: -3px;
  height: 100%;
  width: auto;
  mix-blend-mode: multiply;
  user-select: none;
  animation: snailing 220s linear infinite;
  animation-delay: -10s;
  /* Start with the snail already on screen */
}

/* --- Final Side Drawer Dialog Styles --- */
dialog.side-drawer {
  position: fixed;
  inset: 0 0 0 auto;
  margin: 0;
  width: min(400px, 90vw);
  height: 100vh;
  max-height: 100vh;
  border-radius: var(--radius-3) 0 0 var(--radius-3);
  display: flex;
  flex-direction: column;
  padding: var(--size-fluid-3);
  /* Add some padding */

  /* Initial (closed) state */
  opacity: 0;
  transform: translateX(100%);

  /* Combined transition for open AND close */
  transition:
    display 0.4s allow-discrete,
    overlay 0.3s allow-discrete,
    opacity 0.4s var(--ease-out-3),
    transform 0.4s var(--ease-out-3);
}

dialog.side-drawer[open] {
  /* Final (open) state */
  opacity: 1;
  transform: translateX(0);

  /* Define the starting state for the opening animation */
  @starting-style {
    opacity: 0;
    transform: translateX(100%);
  }
}

/* Position the close button */
dialog.side-drawer #close-sets-dialog-btn {
  position: absolute;
  top: var(--size-2);
  right: var(--size-2);
  z-index: 2;
}

/* Internal layout styles */
dialog.side-drawer .content {
  flex-grow: 1;
  overflow-y: auto;
  padding-inline: 0;
  /* Remove extra padding if main dialog has it */
}

dialog.side-drawer .save-set-action {
  display: grid;
  gap: var(--size-3);
  margin-top: auto;
  padding-top: var(--size-3);
  border-top: 1px solid var(--border-color);
}

dialog.side-drawer .saved-set-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-block: var(--size-2);
  border-bottom: 1px solid var(--border-color);
}

dialog.side-drawer .saved-set-item:last-child {
  border-bottom: none;
}

dialog.side-drawer .saved-set-item .button-group {
  margin: 0;
}

.hidden {
  display: none;
}

@keyframes snailing {
  0% {
    transform: translateX(0);
  }

  100% {
    /* Moves the snail its own width plus the entire screen width to the left */
    transform: translateX(calc(-100% - 100vw));
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 oklch(from var(--primary) l c h / 0);
  }

  50% {
    transform: scale(1.05);
    /* A bright, expanding shadow that quickly fades */
    box-shadow: 0 0 0 20px oklch(from var(--primary) l c h / 0.7);
  }

  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 oklch(from var(--primary) l c h / 0);
  }
}

@keyframes bounce-in {
  from {
    transform: scale(1);
  }

  60% {
    /* Overshoot the final size to create a bounce effect */
    transform: scale(1.1);
  }

  to {
    /* Settle at the final "active" size */
    transform: scale(1.05);
  }
}

@keyframes breathing-glow {
  from {
    /* The static border + a minimal glow */
    box-shadow: inset 0 0 0 var(--border-size-2) var(--_border-color),
      var(--shadow-2),
      0 0 10px -5px var(--player-color);
  }

  to {
    /* The static border + a larger, more intense glow */
    box-shadow: inset 0 0 0 var(--border-size-2) var(--_border-color),
      var(--shadow-2),
      0 0 15px 2px var(--player-color);
  }
}

@media (min-width: 768px) {
  #game-setup .content {
    display: grid;
    grid-template-areas:
      /* "game-mode game-mode" */
      "players game-mode"
      "players rules"
      "words rules"
      "api-settings api-settings";
    grid-template-columns: auto;
    gap: var(--size-5) var(--size-7);
    align-items: start;
  }

  .player-setup {
    grid-area: players;
  }

  .game-rules {
    grid-area: rules;
  }

  .game-mode-setup {
    grid-area: game-mode;
  }

  .word-selection {
    grid-area: words;
  }

  .api-settings {
    grid-area: api-settings;
  }

  .game-mode-setup>.h5 {
    text-align: center;
  }
}