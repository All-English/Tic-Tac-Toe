@layer openprops, normalize, utils, theme, components.base, components.has-deps;

@import url("https://fonts.googleapis.com/css2?family=Parkinsans:wght@300..800&display=swap");

/* Open Props */
@import "https://unpkg.com/open-props@2.0.0-beta.5/css/media-queries.css";
@import "https://unpkg.com/open-props@2.0.0-beta.5/open-props.min.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/utilities.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/index.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/css/sizes/media.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/css/font/lineheight.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/hsl.css" layer(openprops);
@import "https://unpkg.com/open-props@2.0.0-beta.5/css/color/hues.oklch.css" layer(openprops);

/* Normalize, utils, theme */
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/normalize.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/utils.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/theme.css";

/* Base components */
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/actions/button.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/actions/icon-button.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/data-display/card.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/data-display/definition-list.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/feedback/dialog.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/inputs/range.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/inputs/switch.css";

/* Components with dependencies */
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/inputs/field.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/inputs/select.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/inputs/text-field.css";
@import "https://cdn.jsdelivr.net/gh/felix-bohlin/ui@main/src/data-display/list.css";


/* THEME */

:root {
  --palette-hue: var(--oklch-blue);
  --palette-chroma: 0.89;
  --palette-hue-rotate-by: 0;

  --surface-default: light-dark(var(--color-1), var(--color-13));
  --surface-filled: light-dark(var(--color-3), var(--color-15));
  --surface-tonal: light-dark(var(--color-3), var(--color-12));
  --surface-elevated: light-dark(var(--color-1), var(--color-12));

  --surface-card: light-dark(var(--color-2), var(--color-14));

  --border-color: light-dark(var(--color-4), var(--color-12));
}

/* CUSTOM STYLES */

body {
  display: grid;
  place-content: center;
  gap: var(--size-5);
  padding: var(--size-5);
  font-family: 'Parkinsans', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

.theme-switcher-container {
  position: absolute;
  top: var(--size-3);
  right: var(--size-3);
  z-index: 10;
}

.switch>[role=switch] {
  --_icon-sun: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3ccircle cx='12' cy='12' r='4'%3e%3c/circle%3e%3cpath d='M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41'%3e%3c/path%3e%3c/svg%3e");
  --_icon-moon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23292f33' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'%3e%3c/path%3e%3c/svg%3e");
}

.switch>[role=switch]::after {
  content: "";
  background-repeat: no-repeat;
  background-position: center;
  background-size: 60%;
}

.light .switch>[role=switch]::after {
  background-image: var(--_icon-sun);
}

.dark .switch>[role=switch]:checked::after {
  background-image: var(--_icon-moon);
}

main {
  display: grid;
  gap: var(--size-5);
  width: 100%;
}

#game-setup {
  max-width: 60ch;
  margin-inline: auto;
  background-color: var(--surface-card);
}

#game-setup>hgroup {
  text-align: center;
}

#game-setup .actions {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--size-4);
  justify-content: center;
}

#randomize-container {
  display: flex;
  justify-content: center;
  margin-bottom: var(--size-3);
}

#unit-selectors-container {
  margin-bottom: var(--size-3);
}

.word-selection-container {
  justify-items: center;
}

#startGameBtn {
  margin-bottom: var(--size-3);
}

.hidden {
  display: none;
}

#player-names-container {
  display: grid;
  gap: var(--size-3);
  margin-block: var(--size-2) 0;
}

.content>.setup-section>.h5 {
  /* Updated selector */
  border-bottom: 1px solid var(--border-color);
  padding-bottom: var(--size-1);
  margin-block-end: var(--size-4);
  text-align: center;
}

.content>.setup-section:first-of-type>.h5 {
  margin-block-start: 0;
}

/* This makes the player name fields look grabbable */
.player-name-field {
  cursor: grab;
  user-select: none;
  /* Prevents text selection while dragging */
}

/* This class is added to the field being dragged */
.player-name-field.dragging {
  opacity: 0.5;
}

/* This class indicates the item will be dropped BEFORE this element */
.player-name-field.drag-over-top {
  border-top: 3px solid var(--primary);
}

/* This new class indicates the item will be dropped AFTER this element */
.player-name-field.drag-over-bottom {
  border-bottom: 3px solid var(--primary);
}

#game-view:not(.hidden) {
  display: grid;
  place-items: center;
  gap: var(--size-5);
  width: fit-content;
  margin-inline: auto;
}

#player-info-list:not(.hidden) {
  display: flex;
  gap: var(--size-3);
  flex-wrap: wrap;
  justify-content: center;
}

#game-board:not(.hidden) {
  display: grid;
  position: relative;
}

#game-controls:not(.hidden) {
  display: flex;
  justify-content: center;
  gap: var(--size-3);
}

.cell {
  /* --_bg-color: var(--blue-1); */
  --_bg-color: var(--surface-card);
  --_border-color: var(--border-color);
  --_text-color: var(--text-color-1);
  --_border-radius: 0;

  position: relative;
  aspect-ratio: var(--ratio-golden);
  padding: var(--size-fluid-2);
  font-size: var(--font-size-fluid-2);
  word-break: break-all;
  hyphens: auto;

  display: grid;
  place-content: center;

  text-align: center;
  min-width: 100px;
  transition: background-color 0.2s var(--ease-out-3);
}

/* New rule for when the grid is 9x9 or 10x10 */
.large-grid .cell {
  font-size: var(--font-size-fluid-1);
  padding: var(--size-fluid-1);
}

.cell:not(:disabled):hover {
  --_bg-color: oklch(from var(--surface-card) calc(l + 0.05) c h);
}

.cell::after {
  content: attr(data-player-symbol);
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  font-size: var(--font-size-fluid-3);
  color: var(--player-color, var(--text-color-1));
  background-color: oklch(from var(--surface-card) l c h / 0.85);
  backdrop-filter: blur(5px);
  opacity: 0;
  transform: scale(0.8);
  transition: opacity 0.2s var(--ease-out-3), transform 0.2s var(--ease-out-3);
}

.cell[data-player-symbol]::after {
  opacity: 1;
  transform: scale(1);
}

.cell.highlight {
  --_text-color: var(--gray-0);
  --_bg-color: var(--player-color);
}

.cell.pulse {
  animation: pulse 0.6s var(--ease-in-out-3);
}

.range-container,
.phonics-unit-container {
  display: grid;
  gap: var(--size-2);
  grid-template-columns: auto 1fr auto;
  align-items: center;
}

.phonics-unit-container+.phonics-unit-container {
  margin-top: var(--size-2);
}

dialog#game-over-dialog {
  --_bg-color: var(--surface-tonal);
  min-width: 50ch;
  padding: var(--size-5);
  border-radius: var(--radius-3);
  opacity: 0;
  transform: scale(0.95);
  transition:
    opacity 0.3s var(--ease-out-3),
    transform 0.3s var(--ease-out-3);
}

dialog#game-over-dialog[open] {
  opacity: 1;
  transform: scale(1);
}

dialog#game-over-dialog::backdrop {
  background-color: oklch(from var(--surface-tonal) l c h / 0.5);
  backdrop-filter: blur(4px);
  transition: backdrop-filter .3s ease-out, background-color .3s ease-out;
}

#game-over-dialog .actions {
  justify-content: center;
}

#play-again-btn {
  margin-bottom: var(--size-2);
}

#dialog-content {
  text-align: center;
}

#game-over-dialog hgroup {
  align-self: center;
}

#game-over-dialog #dialog-title {
  color: var(--primary);
  display: inline-flex;
  align-items: center;
  gap: var(--size-2);
}

#game-over-dialog #dialog-title svg {
  width: var(--size-6);
  height: var(--size-6);
}

#game-over-dialog .winner-text {
  color: var(--primary);
}

#game-over-dialog .score-list {
  display: grid;
  gap: var(--size-3);
  margin-top: var(--size-4);
}

#game-over-dialog .score-line {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--size-2);
  font-size: var(--font-size-2);
}

#game-over-dialog .score-line.winner {
  color: var(--yellow-7);
  font-weight: var(--font-weight-6);
}

#game-over-dialog .score-line svg {
  width: var(--size-5);
  height: var(--size-5);
}

.player-info-block {
  font-size: var(--font-size-fluid-1);
  padding-block: var(--size-1);
  flex-grow: 1;
  text-align: center;
  gap: var(--size-1);
  --_bg-color: light-dark(oklch(from var(--player-color) 95% 0.02 h), oklch(from var(--player-color) 25% 0.02 h));
  --_border-color: light-dark(oklch(from var(--player-color) 85% 0.05 h), oklch(from var(--player-color) 15% 0.05 h));
  transition:
    transform 0.3s var(--ease-3),
    box-shadow 0.3s var(--ease-3);
}

.player-info-block h3 {
  color: var(--player-color);
}

.player-info-block.current-player {
  transform: scale(1.05);
  box-shadow: inset 0 0 0 var(--border-size-3) var(--_border-color), var(--shadow-4);
}

.word-wrapper {
  display: flex;
  align-items: baseline;
  white-space: nowrap;
}

.cell .target-sounds {
  color: var(--primary);
  font-weight: var(--font-weight-7);
}

.cell.blocked::after {
  animation: var(--animation-shake-x);
}

.setting-group {
  margin-block-start: var(--size-4);
}

.strike-through-line {
  position: absolute;
  height: 5px;
  border-radius: var(--radius-round);
  box-shadow: var(--shadow-2);
  background-color: currentColor;
  transform-origin: left center;

  /* Initial state for animation */
  width: 0;
  opacity: 0;

  transition: width .5s var(--ease-out-3), opacity .5s var(--ease-out-3);
}

label:has(#showLinesToggle) .label {
  white-space: nowrap;
}

.field-hint {
  color: var(--text-2);
  font-size: var(--font-size-0);
  text-align: center;
  margin-inline: auto;
  margin-top: calc(var(--size-2) * -1);
  /* Pulls text closer to the slider */
  max-width: 28ch;
  /* Constrains line length for readability */
}

#view-container {
  display: grid;
  perspective: 1000px;
  /* Creates a 3D space for transformations */
}

.view {
  grid-area: 1 / 1;
  /* Place both views in the same grid cell */
  transition: opacity 0.4s var(--ease-out-3), transform 0.4s var(--ease-out-3);
  backface-visibility: hidden;
  /* Prevents flickering during transform */
}

/* State for the INACTIVE view */
.view:not(.is-active) {
  opacity: 0;
  transform: scale(0.95);
  pointer-events: none;
}

/* State for the ACTIVE view */
.view.is-active {
  opacity: 1;
  transform: scale(1);
  pointer-events: auto;
}

/* New keyframes for the pulse effect */
@keyframes pulse {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

@media (min-width: 768px) {
  #game-setup .content {
    display: grid;
    grid-template-areas:
      "players rules"
      "words words";
    grid-template-columns: 1fr 1fr;
    gap: var(--size-5) var(--size-7);
    align-items: start;
  }

  .player-setup {
    grid-area: players;
  }

  .game-rules {
    grid-area: rules;
  }

  .word-selection {
    grid-area: words;
  }
}